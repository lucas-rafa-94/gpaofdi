configurations {
	jaxb
}

buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'app'
version = ''
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.classesDir = "${buildDir}/classes/jaxb"
	ext.schemaMktImport = "https://ehhs-test.fa.la1.oraclecloud.com/mktImport/ImportPublicService?WSDL"
	ext.schemaIntegrationService = "https://ehhs-test.fa.la1.oraclecloud.com/publicFinancialCommonErpIntegration/ErpIntegrationService?WSDL"

	outputs.dir classesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)
			mkdir(dir: classesDir)

			xjc(destdir: sourcesDir, schema: schemaMktImport,
					package: "mktImport.wsdl") {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}
			
			xjc(destdir: sourcesDir, schema: schemaIntegrationService,
					package: "integrationService.wsdl") {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}

			javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
					debugLevel: "lines,vars,source",
					classpath: configurations.jaxb.asPath) {
				src(path: sourcesDir)
				include(name: "**/*.java")
				include(name: "*.java")
			}

			copy(todir: classesDir) {
				fileset(dir: sourcesDir, erroronmissingdir: false) {
					exclude(name: "**/*.java")
				}
			}
		}
	}
}
// end::wsdl[]

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.9.RELEASE'
	compile('org.springframework.boot:spring-boot-starter-web-services')
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.0.1.RELEASE'
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.13'
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile(files(genJaxb.classesDir).builtBy(genJaxb))
	jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
}

bootJar {
	baseName = 'app'
	version =  ''

	from genJaxb.classesDir
}


task afterEclipseImport {
	dependsOn genJaxb
}
